---
export const prerender = false;
import { Form } from '~/types';
import { Resend } from 'resend';

const { inputs, textarea, disclaimer, button = 'Contact us', description = '' } = Astro.props as Form;
const RESEND_API_KEY = import.meta.env.RESEND_API_KEY;

const resend = new Resend(RESEND_API_KEY);

if (Astro.request.method === 'POST') {
  try{
    const data = await Astro.request.formData();
    const name = data.get('name');
    const email = data.get('email');
    const message = data.get('textarea');

    const emailSent = await resend.emails.send({
      from: 'David Freelance <onboarding@resend.dev>',
      to: ['davidbarbi3r@gmail.com'],
      subject: 'A new message from your website',
      html: `
        <strong>Hello David,</strong>
        <p>You have a new message from your website.</p>
        <p><strong>Name:</strong> ${name}</p>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>Message:</strong> 
          <p>${message}</p>
        </p>
      `,
    });

    console.log(emailSent);
  } catch (error) {
    console.error(error);
  }
}
---

<form method="POST">
  {
    inputs &&
      inputs.map(
        ({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '' }) =>
          name && (
            <div class="mb-6">
              {label && (
                <label for={name} class="block text-sm font-medium">
                  {label}
                </label>
              )}
              <input
                type={type}
                name={name}
                id={name}
                autocomplete={autocomplete}
                placeholder={placeholder}
                class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
              />
            </div>
          )
      )
  }

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm font-medium">
          {textarea.label}
        </label>
        <textarea
          id="textarea"
          name="textarea"
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        />
      </div>
    )
  }

  {
    disclaimer && (
      <div class="mt-3 flex items-start">
        <div class="flex mt-0.5">
          <input
            id="disclaimer"
            name="disclaimer"
            type="checkbox"
            required
            class="cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
          />
        </div>
        <div class="ml-3">
          <label for="disclaimer" class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
            {disclaimer.label}
          </label>
        </div>
      </div>
    )
  }

  {
    button && (
      <div class="mt-10 grid">
        <button type="submit" class="btn btn-primary bg-gradient-to-r from-emerald-800 to-emerald-600 border-none cursor-pointer">
          {button}
        </button>
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
      </div>
    )
  }
</form>
